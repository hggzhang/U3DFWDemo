//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class UIViewWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(UIView), typeof(UnityEngine.MonoBehaviour));
		L.RegFunction("BindLuaView", BindLuaView);
		L.RegFunction("UnBindLuaView", UnBindLuaView);
		L.RegFunction("GetLuaFile", GetLuaFile);
		L.RegFunction("GetLuaView", GetLuaView);
		L.RegFunction("GetChildViews", GetChildViews);
		L.RegFunction("GC", GC);
		L.RegFunction("Hide", Hide);
		L.RegFunction("Show", Show);
		L.RegFunction("FindChild", FindChild);
		L.RegFunction("AddClick", AddClick);
		L.RegFunction("RemoveClick", RemoveClick);
		L.RegFunction("SetImage", SetImage);
		L.RegFunction("SetText", SetText);
		L.RegFunction("GetText", GetText);
		L.RegFunction("SetVisible", SetVisible);
		L.RegFunction("__eq", op_Equality);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("luaFile", get_luaFile, set_luaFile);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int BindLuaView(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UIView obj = (UIView)ToLua.CheckObject<UIView>(L, 1);
			LuaTable arg0 = ToLua.CheckLuaTable(L, 2);
			obj.BindLuaView(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int UnBindLuaView(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UIView obj = (UIView)ToLua.CheckObject<UIView>(L, 1);
			obj.UnBindLuaView();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetLuaFile(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UIView obj = (UIView)ToLua.CheckObject<UIView>(L, 1);
			string o = obj.GetLuaFile();
			LuaDLL.lua_pushstring(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetLuaView(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UIView obj = (UIView)ToLua.CheckObject<UIView>(L, 1);
			LuaInterface.LuaTable o = obj.GetLuaView();
			ToLua.Push(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetChildViews(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UIView obj = (UIView)ToLua.CheckObject<UIView>(L, 1);
			System.Collections.Generic.List<UIView> o = obj.GetChildViews();
			ToLua.PushSealed(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GC(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UIView obj = (UIView)ToLua.CheckObject<UIView>(L, 1);
			obj.GC();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Hide(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UIView obj = (UIView)ToLua.CheckObject<UIView>(L, 1);
			obj.Hide();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Show(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UIView obj = (UIView)ToLua.CheckObject<UIView>(L, 1);
			obj.Show();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int FindChild(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UIView obj = (UIView)ToLua.CheckObject<UIView>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			UnityEngine.Transform o = obj.FindChild(arg0);
			ToLua.Push(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int AddClick(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			UIView obj = (UIView)ToLua.CheckObject<UIView>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			LuaFunction arg1 = ToLua.CheckLuaFunction(L, 3);
			obj.AddClick(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int RemoveClick(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UIView obj = (UIView)ToLua.CheckObject<UIView>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			obj.RemoveClick(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetImage(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			UIView obj = (UIView)ToLua.CheckObject<UIView>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			string arg1 = ToLua.CheckString(L, 3);
			obj.SetImage(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetText(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			UIView obj = (UIView)ToLua.CheckObject<UIView>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			string arg1 = ToLua.CheckString(L, 3);
			obj.SetText(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetText(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UIView obj = (UIView)ToLua.CheckObject<UIView>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			string o = obj.GetText(arg0);
			LuaDLL.lua_pushstring(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetVisible(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			UIView obj = (UIView)ToLua.CheckObject<UIView>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			bool arg1 = LuaDLL.luaL_checkboolean(L, 3);
			obj.SetVisible(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_luaFile(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UIView obj = (UIView)o;
			string ret = obj.luaFile;
			LuaDLL.lua_pushstring(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index luaFile on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_luaFile(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UIView obj = (UIView)o;
			string arg0 = ToLua.CheckString(L, 2);
			obj.luaFile = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index luaFile on a nil value");
		}
	}
}

