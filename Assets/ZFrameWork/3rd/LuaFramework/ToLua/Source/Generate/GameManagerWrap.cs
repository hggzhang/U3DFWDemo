//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class GameManagerWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(GameManager), typeof(UnityEngine.MonoBehaviour));
		L.RegFunction("RegMgr", RegMgr);
		L.RegFunction("InitMgr", InitMgr);
		L.RegFunction("ShutDownMgr", ShutDownMgr);
		L.RegFunction("__eq", op_Equality);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("mgrDict", get_mgrDict, set_mgrDict);
		L.RegVar("Inst", get_Inst, null);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int RegMgr(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			GameManager obj = (GameManager)ToLua.CheckObject<GameManager>(L, 1);
			IMgr arg0 = (IMgr)ToLua.CheckObject<IMgr>(L, 2);
			EMgrLife arg1 = (EMgrLife)ToLua.CheckObject(L, 3, typeof(EMgrLife));
			obj.RegMgr(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int InitMgr(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			GameManager obj = (GameManager)ToLua.CheckObject<GameManager>(L, 1);
			EMgrLife arg0 = (EMgrLife)ToLua.CheckObject(L, 2, typeof(EMgrLife));
			obj.InitMgr(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ShutDownMgr(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			GameManager obj = (GameManager)ToLua.CheckObject<GameManager>(L, 1);
			EMgrLife arg0 = (EMgrLife)ToLua.CheckObject(L, 2, typeof(EMgrLife));
			obj.ShutDownMgr(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_mgrDict(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			GameManager obj = (GameManager)o;
			System.Collections.Generic.Dictionary<EMgrLife,System.Collections.Generic.List<IMgr>> ret = obj.mgrDict;
			ToLua.PushSealed(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index mgrDict on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Inst(IntPtr L)
	{
		try
		{
			ToLua.Push(L, GameManager.Inst);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_mgrDict(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			GameManager obj = (GameManager)o;
			System.Collections.Generic.Dictionary<EMgrLife,System.Collections.Generic.List<IMgr>> arg0 = (System.Collections.Generic.Dictionary<EMgrLife,System.Collections.Generic.List<IMgr>>)ToLua.CheckObject(L, 2, typeof(System.Collections.Generic.Dictionary<EMgrLife,System.Collections.Generic.List<IMgr>>));
			obj.mgrDict = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index mgrDict on a nil value");
		}
	}
}

